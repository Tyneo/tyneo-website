<?php
/**
 * Posts
 * Generated by Tyneo Base Tools
 *
 * @package     model
 * @author      Samuel Kauffmann <skauffmann@tyneo.net>
 * @copyright   Copyright (c) 2011, Samuel Kauffmann
 * @link        http://www.tyneo.net
 * @filesource BasePostsManager.class.php
 */
namespace model;

/**
 * This class provides manager to manipulate Posts objects.
 *
 * @author  Samuel Kauffmann <skauffmann@tyneo.net>
 * @version  1.0
 */
use framework\query\operator\EqualOperator;

class PostsManager extends base\BasePostsManager {
	public function __construct() {
		parent::__construct(\framework\ApplicationContext::getInstance());

		if($this->context->getConfiguration()->has("wordpress.blog.prefix"))
			$this->setTableName($this->context->getConfiguration()->get("wordpress.blog.prefix", "").$this->getTableName());
	}
	
	
	public function getLimitedPosts($max_items) {
		$query = new \framework\query\QueryBuilder();
		$query->addSelect($this->getTableName().'.*');
		$query->addTable($this->getTableName());
		$query->setMaxPerPage($max_items);
		$query->addWhere('post_status', \framework\query\operator\Operator::EQUAL, 'publish');
		$query->addWhere('post_type', \framework\query\operator\Operator::EQUAL, 'post');
		$query->addSort('post_date', 'DESC');
		$results = $this->database->query($query->toSQL());
		return $this->getObjectsFromResult($results);
	}

	protected function getObjectFromRow($row) {
		$object = new \model\Posts();
		$object->setId(\framework\utility\String::fromSQL2($row->id));
		$object->setPostAuthor(\framework\utility\String::fromSQL2($row->post_author));
		$object->setPostDate(\framework\utility\String::fromSQL2($row->post_date));
		$object->setPostDateGmt(\framework\utility\String::fromSQL2($row->post_date_gmt));
		$object->setPostContent(\framework\utility\String::fromSQL2($row->post_content));
		$object->setPostTitle(\framework\utility\String::fromSQL2($row->post_title));
		$object->setPostExcerpt(\framework\utility\String::fromSQL2($row->post_excerpt));
		$object->setPostStatus(\framework\utility\String::fromSQL2($row->post_status));
		$object->setCommentStatus(\framework\utility\String::fromSQL2($row->comment_status));
		$object->setPingStatus(\framework\utility\String::fromSQL2($row->ping_status));
		$object->setPostPassword(\framework\utility\String::fromSQL2($row->post_password));
		$object->setPostName(\framework\utility\String::fromSQL2($row->post_name));
		$object->setToPing(\framework\utility\String::fromSQL2($row->to_ping));
		$object->setPinged(\framework\utility\String::fromSQL2($row->pinged));
		$object->setPostModified(\framework\utility\String::fromSQL2($row->post_modified));
		$object->setPostModifiedGmt(\framework\utility\String::fromSQL2($row->post_modified_gmt));
		$object->setPostContentFiltered(\framework\utility\String::fromSQL2($row->post_content_filtered));
		$object->setPostParent(\framework\utility\String::fromSQL2($row->post_parent));
		$object->setGuid(\framework\utility\String::fromSQL2($row->guid));
		$object->setMenuOrder(\framework\utility\String::fromSQL2($row->menu_order));
		$object->setPostType(\framework\utility\String::fromSQL2($row->post_type));
		$object->setPostMimeType(\framework\utility\String::fromSQL2($row->post_mime_type));
		$object->setCommentCount(\framework\utility\String::fromSQL2($row->comment_count));
	
		$object->setNew(false);
		return $object;
	}
}
