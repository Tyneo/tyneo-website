<?php
/**
 * BasePostmetaManager
 * Generated by Tyneo Base Tools
 *
 * @package     model
 * @author      Samuel Kauffmann <skauffmann@tyneo.net>
 * @copyright   Copyright (c) 2011, Samuel Kauffmann
 * @link        http://www.tyneo.net
 * @filesource	BasePostmetaManager.class.php
 */
namespace model\base;

abstract class BasePostmetaManager extends AbstractBaseObjectManager {
	public function __construct(\framework\ApplicationContext $context) {
		parent::__construct($context);
		$this->setTableName('postmeta');
	}

	public function getPostmetas() {
		$query = new \framework\query\QueryBuilder();
		$query->addSelect($this->getTableName().'.*');
		$query->addTable($this->getTableName());
		$results = $this->database->query($query->toSQL());
		return $this->getObjectsFromResult($results);
	}

	public function getPostmeta($id) {
		$query = new \framework\query\QueryBuilder();
		$query->addSelect($this->getTableName().'.*');
		$query->addTable($this->getTableName());
		if(!is_array($id)) {
			$query->addWhere($this->getTableName().'.id', \framework\query\operator\Operator::EQUAL, $id);
		} else {
			foreach ($id as $key => $value) {
				$query->addWhere($key, \framework\query\operator\Operator::EQUAL, $value);
			}
		}
		$object = $this->database->queryUniqueObject($query->toSQL());
		if($object != null) {
			return $this->getObjectFromRow($object);
		}
		return null;
	}

	protected function getUpdateQuery(\model\Postmeta $obj) {
		$query = new \framework\query\UpdateBuilder($this->getTableName());
					$query->setField('meta_id', $obj->getMetaId());
							$query->setField('post_id', $obj->getPostId());
							$query->setField('meta_key', $obj->getMetaKey());
							$query->setField('meta_value', $obj->getMetaValue());

		foreach ($this->getIdFields() as $id) {
			$method = 'get'.$this->slugify($id);
			$query->addWhere($id, \framework\query\operator\Operator::EQUAL, $obj->$method());
		}
		return $query;
	}

	protected function update(\model\Postmeta $obj) {
		$query = $this->getUpdateQuery($obj);
		$this->database->execute($query->toSQL());
	}

	protected function getCreateQuery(\model\Postmeta $obj) {
		$query = new \framework\query\CreateBuilder($this->getTableName());
				$query->setField('meta_id', $obj->getMetaId());
					$query->setField('post_id', $obj->getPostId());
					$query->setField('meta_key', $obj->getMetaKey());
					$query->setField('meta_value', $obj->getMetaValue());

		return $query;
	}

	protected function create(\model\Postmeta $obj) {
		$query = $this->getCreateQuery($obj);
		$this->database->execute($query->toSQL());
		$obj->setNew(false);
	}

	protected function getObjectFromRow($row) {
		$object = new \model\Postmeta();
			$object->setMetaId(\framework\utility\String::fromSQL($row->meta_id));
			$object->setPostId(\framework\utility\String::fromSQL($row->post_id));
			$object->setMetaKey(\framework\utility\String::fromSQL($row->meta_key));
			$object->setMetaValue(\framework\utility\String::fromSQL($row->meta_value));

		$object->setNew(false);
		return $object;
	}

}
