<?php
/**
 * BasePostsManager
 * Generated by Tyneo Base Tools
 *
 * @package     model
 * @author      Samuel Kauffmann <skauffmann@tyneo.net>
 * @copyright   Copyright (c) 2011, Samuel Kauffmann
 * @link        http://www.tyneo.net
 * @filesource	BasePostsManager.class.php
 */
namespace model\base;

abstract class BasePostsManager extends AbstractBaseObjectManager {
	public function __construct(\framework\ApplicationContext $context) {
		parent::__construct($context);
		$this->setTableName('posts');
	}

	public function getPostss() {
		$query = new \framework\query\QueryBuilder();
		$query->addSelect($this->getTableName().'.*');
		$query->addTable($this->getTableName());
		$results = $this->database->query($query->toSQL());
		return $this->getObjectsFromResult($results);
	}

	public function getPosts($id) {
		$query = new \framework\query\QueryBuilder();
		$query->addSelect($this->getTableName().'.*');
		$query->addTable($this->getTableName());
		if(!is_array($id)) {
			$query->addWhere($this->getTableName().'.id', \framework\query\operator\Operator::EQUAL, $id);
		} else {
			foreach ($id as $key => $value) {
				$query->addWhere($key, \framework\query\operator\Operator::EQUAL, $value);
			}
		}
		$object = $this->database->queryUniqueObject($query->toSQL());
		if($object != null) {
			return $this->getObjectFromRow($object);
		}
		return null;
	}

	protected function getUpdateQuery(\model\Posts $obj) {
		$query = new \framework\query\UpdateBuilder($this->getTableName());
					$query->setField('id', $obj->getId());
							$query->setField('post_author', $obj->getPostAuthor());
							$query->setField('post_date', $obj->getPostDate());
							$query->setField('post_date_gmt', $obj->getPostDateGmt());
							$query->setField('post_content', $obj->getPostContent());
							$query->setField('post_title', $obj->getPostTitle());
							$query->setField('post_excerpt', $obj->getPostExcerpt());
							$query->setField('post_status', $obj->getPostStatus());
							$query->setField('comment_status', $obj->getCommentStatus());
							$query->setField('ping_status', $obj->getPingStatus());
							$query->setField('post_password', $obj->getPostPassword());
							$query->setField('post_name', $obj->getPostName());
							$query->setField('to_ping', $obj->getToPing());
							$query->setField('pinged', $obj->getPinged());
							$query->setField('post_modified', $obj->getPostModified());
							$query->setField('post_modified_gmt', $obj->getPostModifiedGmt());
							$query->setField('post_content_filtered', $obj->getPostContentFiltered());
							$query->setField('post_parent', $obj->getPostParent());
							$query->setField('guid', $obj->getGuid());
							$query->setField('menu_order', $obj->getMenuOrder());
							$query->setField('post_type', $obj->getPostType());
							$query->setField('post_mime_type', $obj->getPostMimeType());
							$query->setField('comment_count', $obj->getCommentCount());

		foreach ($this->getIdFields() as $id) {
			$method = 'get'.$this->slugify($id);
			$query->addWhere($id, \framework\query\operator\Operator::EQUAL, $obj->$method());
		}
		return $query;
	}

	protected function update(\model\Posts $obj) {
		$query = $this->getUpdateQuery($obj);
		$this->database->execute($query->toSQL());
	}

	protected function getCreateQuery(\model\Posts $obj) {
		$query = new \framework\query\CreateBuilder($this->getTableName());
				$query->setField('id', $obj->getId());
					$query->setField('post_author', $obj->getPostAuthor());
					$query->setField('post_date', $obj->getPostDate());
					$query->setField('post_date_gmt', $obj->getPostDateGmt());
					$query->setField('post_content', $obj->getPostContent());
					$query->setField('post_title', $obj->getPostTitle());
					$query->setField('post_excerpt', $obj->getPostExcerpt());
					$query->setField('post_status', $obj->getPostStatus());
					$query->setField('comment_status', $obj->getCommentStatus());
					$query->setField('ping_status', $obj->getPingStatus());
					$query->setField('post_password', $obj->getPostPassword());
					$query->setField('post_name', $obj->getPostName());
					$query->setField('to_ping', $obj->getToPing());
					$query->setField('pinged', $obj->getPinged());
					$query->setField('post_modified', $obj->getPostModified());
					$query->setField('post_modified_gmt', $obj->getPostModifiedGmt());
					$query->setField('post_content_filtered', $obj->getPostContentFiltered());
					$query->setField('post_parent', $obj->getPostParent());
					$query->setField('guid', $obj->getGuid());
					$query->setField('menu_order', $obj->getMenuOrder());
					$query->setField('post_type', $obj->getPostType());
					$query->setField('post_mime_type', $obj->getPostMimeType());
					$query->setField('comment_count', $obj->getCommentCount());

		return $query;
	}

	protected function create(\model\Posts $obj) {
		$query = $this->getCreateQuery($obj);
		$this->database->execute($query->toSQL());
		$obj->setNew(false);
	}

	protected function getObjectFromRow($row) {
		$object = new \model\Posts();
			$object->setId(\framework\utility\String::fromSQL($row->id));
			$object->setPostAuthor(\framework\utility\String::fromSQL($row->post_author));
			$object->setPostDate(\framework\utility\String::fromSQL($row->post_date));
			$object->setPostDateGmt(\framework\utility\String::fromSQL($row->post_date_gmt));
			$object->setPostContent(\framework\utility\String::fromSQL($row->post_content));
			$object->setPostTitle(\framework\utility\String::fromSQL($row->post_title));
			$object->setPostExcerpt(\framework\utility\String::fromSQL($row->post_excerpt));
			$object->setPostStatus(\framework\utility\String::fromSQL($row->post_status));
			$object->setCommentStatus(\framework\utility\String::fromSQL($row->comment_status));
			$object->setPingStatus(\framework\utility\String::fromSQL($row->ping_status));
			$object->setPostPassword(\framework\utility\String::fromSQL($row->post_password));
			$object->setPostName(\framework\utility\String::fromSQL($row->post_name));
			$object->setToPing(\framework\utility\String::fromSQL($row->to_ping));
			$object->setPinged(\framework\utility\String::fromSQL($row->pinged));
			$object->setPostModified(\framework\utility\String::fromSQL($row->post_modified));
			$object->setPostModifiedGmt(\framework\utility\String::fromSQL($row->post_modified_gmt));
			$object->setPostContentFiltered(\framework\utility\String::fromSQL($row->post_content_filtered));
			$object->setPostParent(\framework\utility\String::fromSQL($row->post_parent));
			$object->setGuid(\framework\utility\String::fromSQL($row->guid));
			$object->setMenuOrder(\framework\utility\String::fromSQL($row->menu_order));
			$object->setPostType(\framework\utility\String::fromSQL($row->post_type));
			$object->setPostMimeType(\framework\utility\String::fromSQL($row->post_mime_type));
			$object->setCommentCount(\framework\utility\String::fromSQL($row->comment_count));

		$object->setNew(false);
		return $object;
	}

}
