<?php
/**
 * BaseTermTaxonomy
 * Generated by Tyneo Base Tools
 *
 * @package     model
 * @author      Samuel Kauffmann <skauffmann@tyneo.net>
 * @copyright   Copyright (c) 2011, Samuel Kauffmann
 * @link        http://www.tyneo.net
 * @filesource	BaseTermTaxonomy.class.php
 */
namespace model\base;

/**
 * This class provides an object representation of a TermTaxonomy.
 *
 * @author		Samuel Kauffmann <skauffmann@tyneo.net>
 * @version		1.0
 */
abstract class BaseTermTaxonomy extends AbstractBaseObject {


	/**
	 * Get the term_taxonomy_id
	 *
	 * @return term_taxonomy_id the term_taxonomy_id value
	 */
	public function getTermTaxonomyId() {
		return $this->properties->get('term_taxonomy_id');
	}

	/**
	 * Set the term_taxonomy_id
	 *
	 * @param term_taxonomy_id the term_taxonomy_id value
	 *
	 * @return BaseTermTaxonomy
	 */
	public function setTermTaxonomyId($term_taxonomy_id) {
		$this->properties->set('term_taxonomy_id', $term_taxonomy_id);
		return $this;
	}


	/**
	 * Get the term_id
	 *
	 * @return term_id the term_id value
	 */
	public function getTermId() {
		return $this->properties->get('term_id');
	}

	/**
	 * Set the term_id
	 *
	 * @param term_id the term_id value
	 *
	 * @return BaseTermTaxonomy
	 */
	public function setTermId($term_id) {
		$this->properties->set('term_id', $term_id);
		return $this;
	}


	/**
	 * Get the taxonomy
	 *
	 * @return taxonomy the taxonomy value
	 */
	public function getTaxonomy() {
		return $this->properties->get('taxonomy');
	}

	/**
	 * Set the taxonomy
	 *
	 * @param taxonomy the taxonomy value
	 *
	 * @return BaseTermTaxonomy
	 */
	public function setTaxonomy($taxonomy) {
		$this->properties->set('taxonomy', $taxonomy);
		return $this;
	}


	/**
	 * Get the description
	 *
	 * @return description the description value
	 */
	public function getDescription() {
		return $this->properties->get('description');
	}

	/**
	 * Set the description
	 *
	 * @param description the description value
	 *
	 * @return BaseTermTaxonomy
	 */
	public function setDescription($description) {
		$this->properties->set('description', $description);
		return $this;
	}


	/**
	 * Get the parent
	 *
	 * @return parent the parent value
	 */
	public function getParent() {
		return $this->properties->get('parent');
	}

	/**
	 * Set the parent
	 *
	 * @param parent the parent value
	 *
	 * @return BaseTermTaxonomy
	 */
	public function setParent($parent) {
		$this->properties->set('parent', $parent);
		return $this;
	}


	/**
	 * Get the count
	 *
	 * @return count the count value
	 */
	public function getCount() {
		return $this->properties->get('count');
	}

	/**
	 * Set the count
	 *
	 * @param count the count value
	 *
	 * @return BaseTermTaxonomy
	 */
	public function setCount($count) {
		$this->properties->set('count', $count);
		return $this;
	}

}
